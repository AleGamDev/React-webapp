{"version":3,"sources":["components/ButtonBackToHome.js","pages/Detail.js","components/Title.js","components/SearchForm.js","components/Movie.js","components/MoviesList.js","pages/Home.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["ButtonBackToHome","className","to","Detail","state","movie","id","fetch","then","res","json","console","log","setState","this","props","match","params","_fetchMovie","Title","Poster","Actors","Metascore","Plot","style","paddingBottom","alt","src","Component","children","SearchForm","inputMovie","_handleChange","busqueda","target","value","_handleSubmit","e","preventDefault","results","Search","totalResults","onResults","onSubmit","onChange","type","placeholder","Movie","title","year","poster","MoviesList","movies","map","key","imdbID","Year","Home","usedSearch","_handleResults","length","color","padding","_renderResults","NotFound","App","Helmet","htmlAttributes","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6c196a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Component stateless\r\nexport const ButtonBackToHome = () => (\r\n    <Link className=\"button is-link\" to='/'>Volver a la portada</Link>\r\n)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\r\n\r\nconst API_KEY = '69ed5237'\r\n\r\nexport class Detail extends Component {\r\n    static propTypes = {\r\n        match: PropTypes.shape({\r\n            params: PropTypes.object,\r\n            isExact: PropTypes.bool,\r\n            path: PropTypes.string,\r\n            url: PropTypes.string\r\n        })\r\n    }\r\n\r\n    state = { movie: {} }\r\n\r\n    _fetchMovie ({ id }) {\r\n        fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\r\n            .then(res => res.json())\r\n            .then(movie => {\r\n                console.log({movie})\r\n                this.setState({ movie })\r\n            })\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props)\r\n        const { id } = this.props.match.params\r\n        this._fetchMovie({ id })\r\n    }\r\n\r\n    render() {\r\n        const { Title, Poster, Actors, Metascore, Plot } = this.state.movie\r\n        return (\r\n            <div>\r\n                <h1 className=\"title is-2\">{Title}</h1>\r\n                <img style={{ paddingBottom: \"25px\" }} alt={this.props.id} src={Poster} />\r\n                <h3 className=\"subtitle is-6\"><strong>Actors: </strong>{Actors}</h3>\r\n                <p className=\"subtitle is-6\"><strong>Metacritic rating: </strong>{Metascore}</p>\r\n                <p className=\"subtitle is-6\" style={{ paddingBottom: \"20px\" }}><strong>Plot: </strong>{Plot}</p>\r\n                <ButtonBackToHome />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport const Title = ({ children }) => <h1 className=\"title\">{children}</h1>;\r\n","import React, { Component } from \"react\";\r\n\r\n// API de OMDb - http://www.omdbapi.com/?apikey=[yourkey]&\r\n// Key - 69ed5237\r\n\r\nconst API_KEY = '69ed5237'\r\n\r\nexport class SearchForm extends Component {\r\n    state = {\r\n        inputMovie: \"\",\r\n    };\r\n\r\n    _handleChange = (busqueda) => {\r\n        this.setState({ inputMovie: busqueda.target.value })\r\n    }\r\n\r\n    _handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { inputMovie } = this.state\r\n        fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${inputMovie}`)\r\n            .then(res => res.json())\r\n            .then(results => {\r\n                const { Search = [], totalResults = \"0\" } = results\r\n                console.log({Search, totalResults})\r\n                this.props.onResults(Search)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this._handleSubmit}>\r\n                <div className=\"field has-addons\">\r\n                    <div className=\"control\">\r\n                        <input className=\"input\"\r\n                            onChange={this._handleChange}\r\n                            type=\"text\"\r\n                            placeholder=\"Movies to search...\"/>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <button className=\"button is-info\">Search</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Movie extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        title: PropTypes.string,\r\n        year: PropTypes.string,\r\n        poster: PropTypes.string\r\n    }\r\n\r\n    render() {\r\n        const { id, title, year, poster } = this.props\r\n\r\n        return (\r\n            <Link to={`/detail/${id}`} className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <figure className=\"image\">\r\n                        <img alt={ title } src={ poster } />\r\n                    </figure>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"media\">\r\n                        <div className=\"media-content\">\r\n                            <p className=\"title is-6\">{ title }</p>\r\n                            <p className=\"subtitle is-7\">{ year }</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Movie } from \"./Movie.js\"\r\n\r\nexport class MoviesList extends Component {\r\n    static propTypes = {\r\n        movies: PropTypes.array\r\n    }\r\n\r\n    render() {\r\n        const { movies } = this.props\r\n        return (\r\n            <div className=\"MoviesList\">\r\n                {\r\n                    movies.map(movie => {\r\n                        return (\r\n                            <div key={movie.imdbID} className=\"MoviesList-item\">\r\n                                <Movie\r\n                                    id={movie.imdbID}\r\n                                    title={movie.Title}\r\n                                    year={movie.Year}\r\n                                    poster={movie.Poster} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport { Title } from \"../components/Title.js\" // Con .. le decimos que está arriba\r\nimport { SearchForm } from \"../components/SearchForm.js\"\r\nimport { MoviesList } from \"../components/MoviesList.js\"\r\n\r\nexport class Home extends Component {\r\n    state = { usedSearch: false, results: [] }\r\n\r\n    _handleResults = (results) => {\r\n        this.setState({ results, usedSearch: true })\r\n    }\r\n\r\n    _renderResults() {\r\n        return this.state.results.length === 0\r\n            ? <p style={{ color: \"red\", padding: \"15px\" }}>Results not found!</p>\r\n            : <MoviesList movies={this.state.results} />\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Title>Search Movies</Title>\r\n                <div className=\"SearchForm-wrapper\">\r\n                    <SearchForm onResults={this._handleResults}/>\r\n                </div>\r\n                    { this.state.usedSearch\r\n                        ? this._renderResults()\r\n                        : <small>Use the form to search a movie</small>\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\r\n\r\nexport const NotFound = () => (\r\n    <div>\r\n        <h1 className='title'>404!</h1>\r\n        <h2 className='subtitle'>La página no existe</h2>\r\n        <ButtonBackToHome />\r\n    </div>\r\n)","import React, { Component } from \"react\";\nimport { Switch, Route } from 'react-router-dom'\nimport \"./App.css\";\nimport \"bulma/css/bulma.css\";\nimport { Helmet } from 'react-helmet'\n\nimport { Detail } from \"./pages/Detail.js\"\nimport { Home } from \"./pages/Home.js\"\nimport { NotFound } from \"./pages/NotFound.js\"\n\nclass App extends Component {\n  render () {\n\n    return (\n      <div className=\"App\">\n        <Helmet htmlAttributes={{style: 'background-color : hsl(0, 0%, 85%)'}}>\n        </Helmet>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/detail/:id' component={Detail} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}